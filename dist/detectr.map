{"version":3,"sources":["detectr.js"],"names":["$","String","prototype","trim","replace","doc","document","element","documentElement","detectr","userAgent","ua","toLowerCase","winWidth","outerWidth","clientWidth","winHeight","outerHeight","clientHeight","is","str","indexOf","detect","rendered","implementation","webkitVersion","test","RegExp","$1","sysVersion","push","webkit","gecko","$2","mobile","vv","vd","parseInt","undefined","hasFeature","devicePixelRatio","className","split","concat","join","detected","version","originalClassNames","navigator","resizing","attachEvent","addEventListener","window"],"mappings":"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","file":"detectr.map","sourceRoot":"../src","sourcesContent":["/*!\n * Detectr.js\n * @author Rogerio Taques (rogerio.taques@gmail.com)\n * @see http://github.com/rogeriotaques/detectrjs\n *\n * This project is based on the Rafael Lima's work\n * which is called css_browser_selector and seems\n * to be discontinued. (http://rafael.adm.br/css_browser_selector/).\n */\n\n/*\n * Release notes\n * v1.8 - Add editorconfig, eslint and prevent wiping classes from HTML before injection.\n * v1.7 - Fixed a small bug regarding global variable\n * v1.6 - Add a listener to reanalyse page on resize event\n * v1.4 ~ v1.5 - Bug fixes for detecting Android Stock Browser and some improvements\n * v1.3 - Start detecting Android Stock Browser\n * v1.2 - Start detecting when device runs iOS\n * v1.1 - Added support for Microsoft Edge\n * v1.0 - First release. Totally rewritten and new detectings added.\n */\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 RogÃ©rio Taques\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n;(function detecterjs($) {\n  const version = '1.8.0'\n\n  /**\n   * Whenever .trim() isn't supported, makes it be.\n   */\n  if (typeof String.prototype.trim !== 'function') {\n    // eslint-disable-next-line no-extend-native\n    String.prototype.trim = function trim() {\n      return this.replace(/^\\s+|\\s+$/g, '')\n    }\n  }\n\n  const doc = $.document\n  const element = doc.documentElement\n\n  const detectr = function detectr(userAgent) {\n    const ua = userAgent.toLowerCase()\n    const winWidth = $.outerWidth || element.clientWidth\n    const winHeight = $.outerHeight || element.clientHeight\n    const gecko = 'gecko'\n    const webkit = 'webkit'\n    const safari = 'safari'\n    const opera = 'opera'\n    const mobile = 'mobile'\n\n    /**\n     * Checks if given string is present on the userAgent.\n     * @param  string  str\n     * @return {Boolean}\n     */\n    const is = function is(str) {\n      return ua.indexOf(str) > -1\n    }\n\n    /**\n     * The core feature ...\n     */\n    let detect = function detect() {\n      const rendered = []\n      const {implementation} = doc\n      const webkitVersion = /applewebkit\\/(\\d{1,})/.test(ua) ? RegExp.$1 : false\n\n      let sysVersion = ''\n\n      // *** Detecting browsers ***\n      switch (true) {\n        // internet explorer\n        case (is('msie') && !is('opera') && !is('webtv')) || is('trident') || is('edge'):\n          if (is('edge')) {\n            sysVersion = /edge\\/(\\w+)/.test(ua) ? ' edge ie' + RegExp.$1 : ' ie11'\n          } else if (is('msie 8.0') || is('trident/7.0')) {\n            sysVersion = ' ie11'\n          } else {\n            sysVersion = /msie\\s(\\d+)/.test(ua) ? ' ie' + RegExp.$1 : ''\n          }\n\n          rendered.push('ie' + sysVersion)\n          break\n\n        // iron\n        case is('iron/') || is('iron'):\n          sysVersion = /iron\\/(\\d+)/.test(ua) ? ' iron' + RegExp.$1 : ''\n          rendered.push(webkit + ' iron' + sysVersion)\n          break\n\n        // android\n        case is('android') && is('u;') && (!is('chrome') || (is('chrome') && webkitVersion && webkitVersion <= 534)):\n          // according to some researches android stock (native) browsers never went above applewebkit/534.x,\n          // then, we can suppose user is using a native browser in android when the UA contains \"android\",\n          // \"mobile\" and \"U;\" strings\n          // @see: (http://stackoverflow.com/questions/14403766/how-to-detect-the-stock-android-browser)\n\n          rendered.push('android-browser')\n          break\n\n        // google chrome\n        case is('chrome/') || is('chrome'):\n          sysVersion = /chrome\\/(\\d+)/.test(ua) ? ' chrome' + RegExp.$1 : ''\n          rendered.push(webkit + ' chrome' + sysVersion)\n          break\n\n        // firefox\n        case is('firefox/') || is('firefox'):\n          sysVersion = /firefox\\/(\\d+)/.test(ua) ? ' firefox' + RegExp.$1 : ''\n          rendered.push(gecko + ' firefox' + sysVersion)\n          break\n\n        // opera\n        case is('opera/') || is('opera'):\n          sysVersion = /version(\\s|\\/)(\\d+)/.test(ua) || /opera(\\s|\\/)(\\d+)/.test(ua) ? ' ' + opera + RegExp.$2 : ''\n          rendered.push(opera + sysVersion)\n          break\n\n        // konqueror\n        case is('konqueror'):\n          rendered.push(mobile + ' konqueror')\n          break\n\n        // blackberry\n        case is('blackberry') || is('bb'):\n          rendered.push(mobile + ' blackberry')\n\n          if (is('bb')) {\n            sysVersion = /bb(\\d{1,2})(;{0,1})/.test(ua) ? 'bb' + RegExp.$1 : ''\n            rendered.push(sysVersion)\n          }\n\n          break\n\n        // safari\n        case is('safari/') || is('safari'):\n          sysVersion = /version\\/(\\d+)/.test(ua) || /safari\\/(\\d+)/.test(ua) ? ' ' + safari + RegExp.$1 : ''\n          rendered.push(webkit + ' ' + safari + sysVersion)\n          break\n\n        // applewebkit\n        case is('applewebkit/') || is('applewebkit'):\n          sysVersion = /applewebkit\\/(\\d+)/.test(ua) ? ' ' + webkit + RegExp.$1 : ''\n          rendered.push(webkit + ' ' + sysVersion)\n          break\n\n        // gecko || mozilla\n        case is('gecko') || is('mozilla/'):\n          rendered.push(gecko)\n          break\n\n        default:\n          break\n      }\n\n      // *** Detecting O.S ***\n      switch (true) {\n        // ios\n        case is('iphone') || is('ios'):\n          sysVersion = /iphone\\sos\\s(\\d{1,2})/.test(ua) ? ' ios' + RegExp.$1 : ''\n\n          // For some reason when it's iOS8, userAgent comes like OS 10_10\n          // what returns a wrong version, then we need to match it against\n          // another value\n          if (sysVersion === ' ios10') {\n            const vv = /(\\d{1,2})/.test(sysVersion) ? RegExp.$1 : 0\n            const vd = /\\sversion\\/(\\d{1,2})/.test(ua) ? RegExp.$1 : ''\n\n            if (parseInt(vv, 10) > parseInt(vd, 10)) {\n              sysVersion = ' ios' + vd\n            }\n          }\n\n          rendered.push('ios' + sysVersion)\n          break\n\n        // macintosh\n        case is('mac') || is('macintosh') || is('darwin'):\n          sysVersion = /mac\\sos\\sx\\s(\\d{1,2}_\\d{1,2})/.test(ua) ? ' osx' + RegExp.$1 : ''\n          rendered.push('mac' + sysVersion)\n          break\n\n        // windows\n        case is('windows') || is('win'):\n          sysVersion = /windows\\s(nt\\s{0,1})(\\d{1,2}\\.\\d)/.test(ua) ? '' + RegExp.$2 : ''\n\n          // defining windows version\n          switch (sysVersion) {\n            case '5.0':\n              sysVersion = ' win2k'\n              break\n            case '5.01':\n              sysVersion = ' win2k sp1'\n              break\n            case '5.1':\n            case '5.2':\n              sysVersion = ' xp'\n              break\n            case '6.0':\n              sysVersion = ' vista'\n              break\n            case '6.1':\n              sysVersion = ' win7'\n              break\n            case '6.2':\n              sysVersion = ' win8'\n              break\n            case '6.3':\n              sysVersion = ' win8_1'\n              break\n            case '6.4':\n              sysVersion = ' win10'\n              break\n            default:\n              sysVersion = ' nt nt' + sysVersion\n          }\n\n          rendered.push('windows' + sysVersion)\n          break\n\n        // webtv\n        case is('webtv'):\n          rendered.push('webtv')\n          break\n\n        // freebsd\n        case is('freebsd'):\n          rendered.push('freebsd')\n          break\n\n        // android\n        case is('android') || (is('linux') && is('mobile')):\n          rendered.push('android')\n          break\n\n        // linux\n        case is('linux') || is('x11'):\n          rendered.push('linux')\n          break\n\n        default:\n          break\n      }\n\n      // *** Detecting platform ***\n      switch (true) {\n        // 64 bits\n        case is('wow64') || is('x64'):\n          rendered.push('x64')\n          break\n\n        // arm\n        case is('arm'):\n          rendered.push('arm')\n          break\n\n        // 32 bits\n        default:\n          rendered.push('x32')\n      }\n\n      // *** Detecting devices ***\n      switch (true) {\n        case is('j2me'):\n          rendered.push(mobile + ' j2me')\n          break\n\n        case /(iphone|ipad|ipod)/.test(ua):\n          rendered.push(mobile + ' ' + RegExp.$1)\n          break\n\n        case is('mobile'):\n          rendered.push(mobile)\n          break\n\n        default:\n          break\n      }\n\n      // *** Detecting touchable devices ***\n      if (/touch/.test(ua)) {\n        rendered.push('touch')\n      }\n\n      // *** Assume that it supports javascript by default ***\n      rendered.push('js')\n\n      // *** Detect if SVG images are supported ***\n      rendered.push(\n        implementation !== undefined &&\n          typeof implementation.hasFeature === 'function' &&\n          implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#Image', '1.1')\n          ? 'svg'\n          : 'no-svg'\n      )\n\n      // *** Detect retina display ***\n      rendered.push($.devicePixelRatio !== undefined && $.devicePixelRatio > 1 ? 'retina' : 'no-retina')\n\n      // *** Detecting orientation ***\n      rendered.push(winWidth < winHeight ? 'portrait' : 'landscape')\n\n      return rendered\n    }\n\n    // convert 'detect' from function to array\n    // and avoid unnecessary processing\n    detect = detect()\n\n    // inject the information in the HTML tag.\n    // getting the classes list from the original documentElement\n    // helps prevent wiping classes included while detectr.js execution.\n    element.className = doc.documentElement.className\n      .split(' ')\n      .concat(detect)\n      .join(' ')\n      .trim()\n\n    // return what was detected\n    return {\n      detected: detect.join(' ').trim(),\n      version\n    }\n  }\n\n  // make detectr return available on global scope of console.\n  const originalClassNames = element.className\n\n  // execute and exposes detectr.js to the browser\n  // eslint-disable-next-line\n  $.detectr = detectr($.navigator.userAgent)\n\n  /**\n   * The listener engine for resize event ...\n   */\n  const resizing = function resizing() {\n    element.className = originalClassNames\n    $.detectr = detectr($.navigator.userAgent) // eslint-disable-line\n  }\n\n  // add an event listener for window resize\n  // which will asure that references will be\n  // updated in case of browser resizing\n  if ($.attachEvent) {\n    $.attachEvent('onresize', resizing)\n  } else if ($.addEventListener) {\n    $.addEventListener('resize', resizing, true)\n  }\n})(window)\n"]}